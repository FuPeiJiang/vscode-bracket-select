set selection -2 HERE +2 first ; + multicursor

detect the closest " or ' or ` and do my thing on the same line : read from package.json options
sameLineSameBracket

if found one " but didn't find another matching "
now look for '

case0: sameline bracket, sameLine bracket
case1: sameline bracket, multiLine bracket
case0 || case1 : use the same algo to look for 2nd bracket
ill use the sameLine algo first..

leftBracketObj, rightBracketObj


case3 : haven't found in both sides thing

//since both sides same amount of chars, don't need to check if out of chars TWICE, saves some ifs.
I'm NOT going to do that for multiline..
  let leftChars = 0
  for (let l = i - 1; l > -1; l--) {
    d(lines[l])
    leftChars += lines[l].length
  }
  let rightChars = 0
  for (let l = i + 1; l > -1; l--) {
    d(lines[l])
    rightChars += lines[l].length
    if (rightChars > leftChars) {
      //SEE THIS IF ?!?!?
    }
  }

soo, if one runs out of lines, it's out, easy, BREAK
